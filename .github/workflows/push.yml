name: test

on:
  push:
    branches: main

jobs:
  deploy:
    runs-on: debian-latest
    steps:
      -
        name: Check out the repo
        # https://github.com/actions/checkout
        id: checkout
        uses: actions/checkout@v2
      -
        name: Repo metadata
        id: repo
        uses: actions/github-script@v3
        with:
          script: |
            const repo = await github.repos.get(context.repo)
            return repo.data
      -
        name: Prepare
        id: prep
        run: |
          OWNER=testmediumlabjs
          REPO=github_actions_medium
          VERSION=${{ github.sha }}
          TAGS_INICIAL="${OWNER}/${REPO}:${VERSION}"
          TAGS="${TAGS_INICIAL},${OWNER}/${REPO}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=tags_inicial::${TAGS_INICIAL}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      -
        name: Set up QEMU
        # https://github.com/docker/setup-qemu-action
        id: set_up_qemu
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        # https://github.com/docker/setup-buildx-action
        id: buildx
        uses: docker/setup-buildx-action@master
      -
        name: Login to DockerHub
        # https://github.com/docker/login-action
        id: login_dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      -
        name: Build and push
        # https://github.com/docker/build-push-action/tree/master
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ fromJson(steps.repo.outputs.result).name }}
            org.opencontainers.image.description=${{ fromJson(steps.repo.outputs.result).description }}
            org.opencontainers.image.url=${{ fromJson(steps.repo.outputs.result).html_url }}
            org.opencontainers.image.source=${{ fromJson(steps.repo.outputs.result).clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ fromJson(steps.repo.outputs.result).license.spdx_id }}
      -
        name: Sync Readme Github - Dockerhub
        # https://github.com/marketplace/actions/dockerhub-readme
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASS}}
          repository: testmediumlabjs/github_actions_medium
          readme: "./README.md"
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      -
        name: Run Snyk to check Docker image for vulnerabilities
        # https://github.com/snyk/actions
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ steps.prep.outputs.tags_inicial }}
          args: --file=Dockerfile
      -
        name: Slack notification
        # https://github.com/Ilshidur/action-slack
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: Github Actions
          SLACK_CHANNEL: fligoo_talk
          SLACK_AVATAR: repository
        uses: Ilshidur/action-slack@2.0.2
        with:
          args: 'A new commit has been pushed. Please verify github action:
          | worflow ${{ fromJson(steps.repo.outputs.result).html_url }}/actions
          | Exec: ${{ steps.prep.outputs.created }}
          | Version: ${{ steps.prep.outputs.version }}'